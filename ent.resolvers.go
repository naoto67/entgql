package entgql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.61

import (
	"context"
	"fmt"

	"entgo.io/contrib/entgql"
	"github.com/naoto67/entgql/ent"
	"github.com/naoto67/entgql/ent/schema/pulid"
)

// ID is the resolver for the id field.
func (r *todoResolver) ID(ctx context.Context, obj *ent.Todo) (int, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Parent is the resolver for the parent field.
func (r *todoResolver) Parent(ctx context.Context, obj *ent.Todo) (*ent.Todo, error) {
	panic(fmt.Errorf("not implemented: Parent - parent"))
}

// Children is the resolver for the children field.
func (r *todoResolver) Children(ctx context.Context, obj *ent.Todo, after *entgql.Cursor[pulid.ID], first *int, before *entgql.Cursor[pulid.ID], last *int, orderBy []*ent.TodoOrder, where *TodoWhereInput) (*ent.TodoConnection, error) {
	panic(fmt.Errorf("not implemented: Children - children"))
}

// Todo returns TodoResolver implementation.
func (r *Resolver) Todo() TodoResolver { return &todoResolver{r} }

type todoResolver struct{ *Resolver }
