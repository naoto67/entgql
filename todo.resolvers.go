package entgql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.61

import (
	"context"
	"fmt"

	"entgo.io/contrib/entgql"
	"github.com/google/uuid"
	"github.com/naoto67/entgql/ent"
	"github.com/naoto67/entgql/ent/schema/puuid"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input ent.CreateTodoInput) (*ent.Todo, error) {
	return ent.FromContext(ctx).Todo.
		Create().
		SetInput(input).
		Save(ctx)
}

// ClearTodos is the resolver for the clearTodos field.
func (r *mutationResolver) ClearTodos(ctx context.Context) (int, error) {
	panic(fmt.Errorf("not implemented: ClearTodos - clearTodos"))
}

// Ping is the resolver for the ping field.
func (r *queryResolver) Ping(ctx context.Context) (string, error) {
	panic(fmt.Errorf("not implemented: Ping - ping"))
}

// TodosWithJoins is the resolver for the todosWithJoins field.
func (r *queryResolver) TodosWithJoins(ctx context.Context, after *entgql.Cursor[puuid.ID], first *int, before *entgql.Cursor[puuid.ID], last *int, orderBy []*ent.TodoOrder, where *TodoWhereInput) (*ent.TodoConnection, error) {
	panic(fmt.Errorf("not implemented: TodosWithJoins - todosWithJoins"))
}

// ExtendedField is the resolver for the extendedField field.
func (r *todoResolver) ExtendedField(ctx context.Context, obj *ent.Todo) (*string, error) {
	panic(fmt.Errorf("not implemented: ExtendedField - extendedField"))
}

// ParentID is the resolver for the parentID field.
func (r *createTodoInputResolver) ParentID(ctx context.Context, obj *ent.CreateTodoInput, data *uuid.UUID) error {
	panic(fmt.Errorf("not implemented: ParentID - parentID"))
}

// ChildIDs is the resolver for the childIDs field.
func (r *createTodoInputResolver) ChildIDs(ctx context.Context, obj *ent.CreateTodoInput, data []uuid.UUID) error {
	panic(fmt.Errorf("not implemented: ChildIDs - childIDs"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// CreateTodoInput returns CreateTodoInputResolver implementation.
func (r *Resolver) CreateTodoInput() CreateTodoInputResolver { return &createTodoInputResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type createTodoInputResolver struct{ *Resolver }
